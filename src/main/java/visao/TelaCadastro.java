package visao;

import Conexao.conexao;
import dao.UsuarioDAO;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.Collection;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import modal.Usuario;
import modal.tableUsuario;

/**
 *
 * @author RAG
 */
public class TelaCadastro extends javax.swing.JFrame {

    conexao conn = new conexao();
    UsuarioDAO dUsuario = new UsuarioDAO();
    Usuario mUsuario = new Usuario();
    private int flag;
    BufferedImage imagemGeral;
    tableUsuario t = new tableUsuario();

    /**
     * Creates new form TelaCadastro2
     */
    public TelaCadastro() {

        initComponents();

        jTableUsuarios.setModel(t);
        atualizaTabela("SELECT * FROM Usuarios");
        disposicaoBotoes(1);
        jButtonNovo.setText("Novo");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMenssagem1 = new javax.swing.JPanel();
        jPaneltFieldTelaCad = new javax.swing.JPanel();
        jTextFieldID = new javax.swing.JTextField();
        jLabelID = new javax.swing.JLabel();
        jLabelNome = new javax.swing.JLabel();
        jTextFieldLogin = new javax.swing.JTextField();
        jLabelSenha = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jLabelEmail = new javax.swing.JLabel();
        jButtonSelecionarImagem = new javax.swing.JButton();
        jLabelImagem = new javax.swing.JLabel();
        jLabelTelefone = new javax.swing.JLabel();
        jTextFieldTelefone = new javax.swing.JTextField();
        jScrollPaneBIO = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabelBio = new javax.swing.JLabel();
        jPasswordFieldSenha = new javax.swing.JPasswordField();
        jButtonSalvar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonNovo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsuarios = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro De Usuário");
        setBackground(new java.awt.Color(51, 51, 51));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanelMenssagem1.setBackground(new java.awt.Color(51, 51, 51));
        jPanelMenssagem1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPaneltFieldTelaCad.setBackground(new java.awt.Color(51, 51, 51));
        jPaneltFieldTelaCad.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro Usuário", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Hack Nerd Font", 0, 13), new java.awt.Color(204, 204, 204))); // NOI18N
        jPaneltFieldTelaCad.setForeground(new java.awt.Color(51, 204, 0));

        jTextFieldID.setBackground(new java.awt.Color(153, 153, 153));
        jTextFieldID.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldID.setEnabled(false);
        jTextFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIDActionPerformed(evt);
            }
        });

        jLabelID.setBackground(new java.awt.Color(102, 102, 102));
        jLabelID.setForeground(new java.awt.Color(153, 153, 153));
        jLabelID.setText("ID");

        jLabelNome.setBackground(new java.awt.Color(102, 102, 102));
        jLabelNome.setForeground(new java.awt.Color(153, 153, 153));
        jLabelNome.setText("Login:");

        jTextFieldLogin.setBackground(new java.awt.Color(153, 153, 153));
        jTextFieldLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLoginActionPerformed(evt);
            }
        });

        jLabelSenha.setBackground(new java.awt.Color(102, 102, 102));
        jLabelSenha.setForeground(new java.awt.Color(153, 153, 153));
        jLabelSenha.setText("Senha");

        jTextFieldEmail.setBackground(new java.awt.Color(153, 153, 153));
        jTextFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmailActionPerformed(evt);
            }
        });

        jLabelEmail.setBackground(new java.awt.Color(153, 153, 153));
        jLabelEmail.setForeground(new java.awt.Color(153, 153, 153));
        jLabelEmail.setText("Email");

        jButtonSelecionarImagem.setBackground(new java.awt.Color(102, 102, 102));
        jButtonSelecionarImagem.setForeground(new java.awt.Color(51, 51, 51));
        jButtonSelecionarImagem.setText("Selecionar Imagen");
        jButtonSelecionarImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelecionarImagemActionPerformed(evt);
            }
        });

        jLabelImagem.setBackground(new java.awt.Color(102, 102, 102));
        jLabelImagem.setForeground(new java.awt.Color(51, 51, 51));
        jLabelImagem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelTelefone.setBackground(new java.awt.Color(102, 102, 102));
        jLabelTelefone.setForeground(new java.awt.Color(153, 153, 153));
        jLabelTelefone.setText("Telefone");

        jTextFieldTelefone.setBackground(new java.awt.Color(153, 153, 153));
        jTextFieldTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTelefoneActionPerformed(evt);
            }
        });

        jScrollPaneBIO.setBackground(new java.awt.Color(51, 51, 51));
        jScrollPaneBIO.setForeground(new java.awt.Color(102, 102, 102));

        jTextArea1.setBackground(new java.awt.Color(153, 153, 153));
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(51, 51, 51));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPaneBIO.setViewportView(jTextArea1);
        jTextArea1.getAccessibleContext().setAccessibleName("");
        jTextArea1.getAccessibleContext().setAccessibleDescription("");

        jLabelBio.setBackground(new java.awt.Color(102, 102, 102));
        jLabelBio.setForeground(new java.awt.Color(153, 153, 153));
        jLabelBio.setText("Bio");

        jPasswordFieldSenha.setBackground(new java.awt.Color(153, 153, 153));
        jPasswordFieldSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordFieldSenhaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPaneltFieldTelaCadLayout = new javax.swing.GroupLayout(jPaneltFieldTelaCad);
        jPaneltFieldTelaCad.setLayout(jPaneltFieldTelaCadLayout);
        jPaneltFieldTelaCadLayout.setHorizontalGroup(
            jPaneltFieldTelaCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneltFieldTelaCadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPaneltFieldTelaCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPaneltFieldTelaCadLayout.createSequentialGroup()
                        .addComponent(jLabelBio)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPaneltFieldTelaCadLayout.createSequentialGroup()
                        .addGroup(jPaneltFieldTelaCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPaneBIO)
                            .addGroup(jPaneltFieldTelaCadLayout.createSequentialGroup()
                                .addGroup(jPaneltFieldTelaCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPaneltFieldTelaCadLayout.createSequentialGroup()
                                        .addComponent(jLabelTelefone)
                                        .addGap(214, 214, 214))
                                    .addGroup(jPaneltFieldTelaCadLayout.createSequentialGroup()
                                        .addGroup(jPaneltFieldTelaCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jPasswordFieldSenha, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldTelefone)
                                            .addComponent(jTextFieldID, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldLogin, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPaneltFieldTelaCadLayout.createSequentialGroup()
                                                .addGroup(jPaneltFieldTelaCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabelID, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabelEmail, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabelNome, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabelSenha, javax.swing.GroupLayout.Alignment.LEADING))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(jTextFieldEmail, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(33, 33, 33)))
                                .addGroup(jPaneltFieldTelaCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonSelecionarImagem)
                                    .addComponent(jLabelImagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(24, 24, 24))))
        );
        jPaneltFieldTelaCadLayout.setVerticalGroup(
            jPaneltFieldTelaCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneltFieldTelaCadLayout.createSequentialGroup()
                .addComponent(jLabelID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPaneltFieldTelaCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPaneltFieldTelaCadLayout.createSequentialGroup()
                        .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jLabelEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelSenha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPasswordFieldSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTelefone)
                        .addGap(7, 7, 7)
                        .addComponent(jTextFieldTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPaneltFieldTelaCadLayout.createSequentialGroup()
                        .addComponent(jLabelImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSelecionarImagem)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelBio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneBIO, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jButtonSalvar.setBackground(new java.awt.Color(102, 102, 102));
        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonCancelar.setBackground(new java.awt.Color(102, 102, 102));
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonNovo.setBackground(new java.awt.Color(102, 102, 102));
        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jTableUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableUsuariosMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUsuarios);

        javax.swing.GroupLayout jPanelMenssagem1Layout = new javax.swing.GroupLayout(jPanelMenssagem1);
        jPanelMenssagem1.setLayout(jPanelMenssagem1Layout);
        jPanelMenssagem1Layout.setHorizontalGroup(
            jPanelMenssagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenssagem1Layout.createSequentialGroup()
                .addComponent(jPaneltFieldTelaCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanelMenssagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonNovo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
            .addGroup(jPanelMenssagem1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanelMenssagem1Layout.setVerticalGroup(
            jPanelMenssagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenssagem1Layout.createSequentialGroup()
                .addGroup(jPanelMenssagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMenssagem1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPaneltFieldTelaCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanelMenssagem1Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jButtonNovo)
                        .addGap(80, 80, 80)
                        .addComponent(jButtonCancelar)
                        .addGap(80, 80, 80)
                        .addComponent(jButtonSalvar)
                        .addGap(27, 27, 27)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMenssagem1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMenssagem1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBounds(50, 0, 648, 628);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLoginActionPerformed
        
    }//GEN-LAST:event_jTextFieldLoginActionPerformed


    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        String email = jTextFieldEmail.getText();
        String telefone = jTextFieldTelefone.getText();

        if (!validaEmail(email)) {
            JOptionPane.showMessageDialog(null, "Email inválido!");
            return;
        }

        if (!validaTelefone(telefone)) {
            JOptionPane.showMessageDialog(null, "Telefone inválido!");
            return;
        }
        if (jTextFieldLogin.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "O campo login está vazio");
            jTextFieldLogin.setBackground(Color.red);
        } else {
            jTextFieldLogin.setBackground(Color.white);
        }
        if (jPasswordFieldSenha.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "O campo senha está vazio");
            jPasswordFieldSenha.setBackground(Color.red);
        } else {
            jPasswordFieldSenha.setBackground(Color.white);
        }

        if (jTextFieldLogin.getBackground() == Color.white && jPasswordFieldSenha.getBackground() == Color.white) {
            mUsuario.setLogin(jTextFieldLogin.getText());
            mUsuario.setSenha(jPasswordFieldSenha.getText());
            mUsuario.setEmail(jTextFieldEmail.getText());
            mUsuario.setBio(jTextArea1.getText());
            mUsuario.setTelefone(jTextFieldTelefone.getText());

            ByteArrayOutputStream baos = new ByteArrayOutputStream();

            if (imagemGeral != null) {
                try {
                    ImageIO.write(imagemGeral, "jpg", baos);
                    mUsuario.setImagemPerfil(baos.toByteArray());
                } catch (IOException ex) {
                    Logger.getLogger(TelaCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            if (flag == 1) {
                dUsuario.createUsuario(mUsuario);
                limpaCampos();
                disposicaoBotoes(1);
                atualizaTabela("SELECT * FROM Usuarios");
                jButtonNovo.setText("Novo");

            } else {
                mUsuario.setUsuarioId(Integer.parseInt(jTextFieldID.getText()));
                dUsuario.updateUsuario(mUsuario);

                limpaCampos();
                disposicaoBotoes(1);
                atualizaTabela("SELECT * FROM Usuarios"); // Changed "Usuarios" to "Usuario"
                jButtonNovo.setText("Novo");
            }
        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        limpaCampos();
        disposicaoBotoes(1);
        jButtonNovo.setText("Novo");
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        if (jButtonNovo.getText().equals("Novo")) {
            flag = 1;
        } else {
            flag = 2;
        }
        disposicaoBotoes(2);
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jTextFieldIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDActionPerformed

    private void jButtonSelecionarImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelecionarImagemActionPerformed
        caminhoFoto();
    }//GEN-LAST:event_jButtonSelecionarImagemActionPerformed

    private void jTableUsuariosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUsuariosMouseReleased
        flag = 2;
        jButtonNovo.setText("Alterar");
        if (jTableUsuarios.getSelectedRow() != -1) {
            jTextFieldID.setText(jTableUsuarios.getValueAt(jTableUsuarios.getSelectedRow(), 0).toString());
            jTextFieldLogin.setText(jTableUsuarios.getValueAt(jTableUsuarios.getSelectedRow(), 1).toString());
            jTextFieldEmail.setText(jTableUsuarios.getValueAt(jTableUsuarios.getSelectedRow(), 2).toString());
            conn.executaSQL("SELECT * FROM Usuarios WHERE usuario_id = " + jTextFieldID.getText());
            try {
                if (conn.rs.next()) {
                    jPasswordFieldSenha.setText(conn.rs.getString("senha"));
                    jTextFieldTelefone.setText(conn.rs.getString("telefone"));
                    jTextFieldEmail.setText(conn.rs.getString("email"));
                    jTextArea1.setText(conn.rs.getString("bio"));

                    if (conn.rs.getBytes("imagemPerfil") != null && conn.rs.getBytes("imagemPerfil").length > 0) {
                        byte[] imagemBytes = conn.rs.getBytes("imagemPerfil");
                        ByteArrayInputStream bais = new ByteArrayInputStream(imagemBytes);
                        BufferedImage imagem = ImageIO.read(bais);
                        ImageIcon imagemIcon = new ImageIcon(redimensionarImagem(imagem, jLabelImagem.getWidth(), jLabelImagem.getHeight()));
                        jLabelImagem.setIcon(imagemIcon);
                    } else {
                        jLabelImagem.setIcon(null);
                    }
                }
                conn.rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(TelaCadastro.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(TelaCadastro.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Para alterar, selecione algum item.");
        }
    }//GEN-LAST:event_jTableUsuariosMouseReleased

    private void jPasswordFieldSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordFieldSenhaActionPerformed

    }//GEN-LAST:event_jPasswordFieldSenhaActionPerformed

    private void jTextFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmailActionPerformed

    }//GEN-LAST:event_jTextFieldEmailActionPerformed

    private void jTextFieldTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTelefoneActionPerformed
        String telefone = jTextFieldTelefone.getText();
        if (!telefone.matches("\\(\\d{2}\\) \\d{4}-\\d{4}")) {
            // Corrigir o formato do TextField
            if (telefone.length() == 10) {
                telefone = "(" + telefone.substring(0, 2) + ") " + telefone.substring(2, 6) + "-" + telefone.substring(6, 10);
            } else if (telefone.length() == 11) {
                telefone = "(" + telefone.substring(0, 2) + ") " + telefone.substring(2, 7) + "-" + telefone.substring(7, 11);
            } else if (telefone.length() > 11) {
                telefone = telefone.substring(0, 11);
            }
            jTextFieldTelefone.setText(telefone);
        }
    }//GEN-LAST:event_jTextFieldTelefoneActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    private void limparCampos() {
        // Obtém todos os campos do formulário
        Collection<JTextField> camimagemGeralpos = Arrays.asList(jTextFieldLogin, jPasswordFieldSenha, jTextFieldTelefone, jTextFieldEmail);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TelaCadastro().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JButton jButtonSelecionarImagem;
    private javax.swing.JLabel jLabelBio;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelImagem;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelSenha;
    private javax.swing.JLabel jLabelTelefone;
    private javax.swing.JPanel jPanelMenssagem1;
    private javax.swing.JPanel jPaneltFieldTelaCad;
    private javax.swing.JPasswordField jPasswordFieldSenha;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneBIO;
    private javax.swing.JTable jTableUsuarios;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldLogin;
    private javax.swing.JTextField jTextFieldTelefone;
    // End of variables declaration//GEN-END:variables

    // funçoes extras
    private void caminhoFoto() {
        JFileChooser fileChooser = new JFileChooser();

        // Configura um filtro para permitir apenas arquivos de imagem JPEG
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivos de Imagem", "jpg", "jpeg", "png");
        fileChooser.setFileFilter(filter);

        // Abre a caixa de diálogo para escolher um arquivo
        int escolha = fileChooser.showOpenDialog(null);

        if (escolha == JFileChooser.APPROVE_OPTION) {
            // O usuário selecionou um arquivo
            String caminhoArquivo = fileChooser.getSelectedFile().getAbsolutePath();
            File arquivoSelecionado = fileChooser.getSelectedFile();

            lidarComFoto(arquivoSelecionado, caminhoArquivo);

        } else {
            System.out.println("Nenhum arquivo selecionado.");
        }
    }

    public BufferedImage carregarImagem(File arquivo) {
        try {
            return ImageIO.read(arquivo);
        } catch (IOException e) {
            e.printStackTrace();
            return null; // Tratamento de erro, retorne null ou faça algo apropriado aqui
        }
    }

    private void lidarComFoto(File arquivo, String caminhoImagem) {

        try {
            // Carrega a imagem do arquivo
            BufferedImage imagem = ImageIO.read(new File(caminhoImagem));
            imagemGeral = imagem;
            BufferedImage imagemOriginal = carregarImagem(arquivo);
            // Verifica se a imagem foi carregada com sucesso
            if (imagem != null) {
                ImageIcon imagemIcon = new ImageIcon(redimensionarImagem(imagemOriginal, jLabelImagem.getWidth(), jLabelImagem.getHeight()));
                jLabelImagem.setIcon(imagemIcon);

                System.out.println("Imagem carregada com sucesso!");
            } else {
                System.out.println("Não foi possível carregar a imagem.");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private Image redimensionarImagem(BufferedImage imagemOriginal, int largura, int altura) {
        if (imagemOriginal != null) {
            double proporcaoLargura = (double) largura / imagemOriginal.getWidth();
            double proporcaoAltura = (double) altura / imagemOriginal.getHeight();
            double fatorEscala = Math.min(proporcaoLargura, proporcaoAltura);

            int novaLargura = (int) (imagemOriginal.getWidth() * fatorEscala);
            int novaAltura = (int) (imagemOriginal.getHeight() * fatorEscala);

            Image imagemRedimensionada = imagemOriginal.getScaledInstance(novaLargura, novaAltura, Image.SCALE_SMOOTH);

            // Crie uma imagem intermediária com a resolução desejada
            BufferedImage imagemIntermediaria = new BufferedImage(largura, altura, BufferedImage.TYPE_INT_RGB);
            Graphics2D g2d = imagemIntermediaria.createGraphics();
            g2d.drawImage(imagemRedimensionada, (largura - novaLargura) / 2, (altura - novaAltura) / 2, null);
            g2d.dispose();

            return imagemIntermediaria;
        }
        return null;
    }

    public void atualizaTabela(String sql) {
        t.dados.removeAll(t.dados);
        // Certifique-se de que "conn" seja uma instância válida de uma classe com executaSQL e rs
        conn.executaSQL(sql);

        try {
            while (conn.rs.next()) {
                Usuario modalQ = new Usuario();

                // Certifique-se de que os nomes das colunas estejam corretos
                modalQ.setUsuarioId(conn.rs.getInt("usuario_id"));
                modalQ.setLogin(conn.rs.getString("login"));
                modalQ.setEmail(conn.rs.getString("email"));

                // Adicione a linha à tabela
                t.addRow(modalQ);
            }
            conn.rs.close();
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    private void disposicaoBotoes(int flag) {
        if (flag == 1) {
            jButtonNovo.setEnabled(true);
            jButtonCancelar.setEnabled(false);
            jButtonSalvar.setEnabled(false);
            for (Component c : jPaneltFieldTelaCad.getComponents()) {
                if (c instanceof JTextField) {
                    ((JTextField) c).setEnabled(false);
                }
            }
            jButtonSelecionarImagem.setEnabled(false);
            jPasswordFieldSenha.setEnabled(false);
            jTextFieldID.setEnabled(false);
            jTextArea1.setEnabled(false);
        } else {
            jButtonNovo.setEnabled(false);
            jButtonCancelar.setEnabled(true);
            jButtonSalvar.setEnabled(true);

            for (Component c : jPaneltFieldTelaCad.getComponents()) {
                if (c instanceof JTextField) {
                    ((JTextField) c).setEnabled(true);
                }
            }
            jPasswordFieldSenha.setEnabled(true);
            jButtonSelecionarImagem.setEnabled(true);
            jTextArea1.setEnabled(true);
            jTextFieldID.setEnabled(false);
        }
    }

    private void limpaCampos() {
        for (Component c : jPaneltFieldTelaCad.getComponents()) {
            if (c instanceof JTextField jTextField) {
                jTextField.setText("");

            }
        }
        jPasswordFieldSenha.setText("");
        jLabelImagem.setIcon(null);
        jTextArea1.setText("");
    }

    private boolean validaEmail(String email) {
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\."
                + "[a-zA-Z0-9_+&*-]+)*@"
                + "(?:[a-zA-Z0-9-]+\\.)+[a-z"
                + "A-Z]{2,7}$";
        Pattern emailPat = Pattern.compile(emailRegex);
        if (email == null) {
            return false;
        }
        return emailPat.matcher(email).matches();
    }

    private boolean validaTelefone(String telefone) {
        if (telefone == null || telefone.length() != 15) {
            return false;
        }
        return true;

    }
}
